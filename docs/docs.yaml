docs:

  dochub.essentials.docs.intro: #todo Добавить определение AaaC
    location: Essentials/Intro
    order: 100
    description: DocHub Essentials Documentation Entry Point
    type: markdown
    source: intro.md

  dochub.essentials.lake:
    location: Essentials/SDK/Карта Озера (DH Lake Map)
    order: 110
    description: DocHub Lake Map
    type: markdown
    template: lake.md

  dochub.essentials.lake.packages:
    location: ""
    description: Packages Found
    type: markdown
    template: packages.md
    source: >
      (
        $data:= $params.data; $data:= $eval($decodeUrl($data));

        $description:= $data.description;
        $packages_list:= $data.list;
        
        { "description": $description,
          "list": $map($packages_list, function($v){
                    $merge([{"id": $v.$keys()}, $v.*])
                  })
        }
      )

  dochub.essentials.lake.imports:
    location: ""
    description: Imports Found
    type: markdown
    template: imports.md
    source: >
      (
        $data:= $params.data; $data:= $eval($decodeUrl($data));

        $description:= $data.description;
        $imports_list:= $data.list;
        
        { "description": $description,
          "list":$imports_list
        }
      )

  dochub.essentials.lake.rules:
    location: ""
    description: Rules Found
    type: markdown
    template: rules.md
    source: >
      (
        $data:= $params.data; $data:= $eval($decodeUrl($data));

        $description:= $data.description;
        $rules_list:= $data.list;
        
        { "description": $description,
          "list":$rules_list
        }
      )

  dochub.essentials.lake.docs:
    location: ""
    description: Docs Found
    type: markdown
    template: docs.md
    source: >
      (
        $data:= $params.data; $data:= $eval($decodeUrl($data));

        $description:= $data.description;
        $docs_list:= $data.list;
        
        { "description": $description,
          "list":$docs_list
        }
      )

  dochub.essentials.lake.functions:
    location: ""
    description: Docs Found
    type: markdown
    template: functions.md
    source: >
      (
        $data:= $params.data; $data:= $eval($decodeUrl($data));

        $description:= $data.description;
        $functions_list:= $data.list;
        
        { "description": $description,
          "list":$functions_list
        }
      )

  dochub.essentials.lake.arch_entities:
    location: ""
    description: Перечень архитектурных сущностей
    type: markdown
    template: arch_entities.md
    source: >
      (
        $data:= $params.data; $data:= $eval($decodeUrl($data));

        $description:= "Архитектурные сущности";
        $arch_entities_list:= $data;
        
        { "description": $description,
          "list":$arch_entities_list
        }
      )

  dochub.essentials.lake.not_arch_entities:
    location: ""
    description: Перечень НЕ архитектурных сущностей
    type: markdown
    template: not_arch_entities.md
    source: >
      (
        $data:= $params.data; $data:= $eval($decodeUrl($data));

        $description:= "Не архитектурные сущности";
        $not_arch_entities_list:= $data;
        
        { "description": $description,
          "list":$not_arch_entities_list
        }
      )

  dochub.essentials.lake.undefined_configured_entities:
    location: ""
    description: Слабо определенные сущности
    type: markdown
    template: undefined_configured_entities.md
    source: >
      (
        $data:= $params.data; $data:= $eval($decodeUrl($data));

        $description:= "Слабо определенные сущности";
        $undefined_configured_entities_list:= $data;
        
        { "description": $description,
          "list":$undefined_configured_entities_list
        }
      )

  dochub.essentials.lake.undefined_entities:
    location: ""
    description: Слабо определенные сущности
    type: markdown
    template: undefined_entities.md
    source: >
      (
        $data:= $params.data; $data:= $eval($decodeUrl($data));

        $description:= "Не определенные сущности";
        $undefined_entities_list:= $data;
        
        { "description": $description,
          "list":$undefined_entities_list
        }
      )

  dochub.essentials.lake.icon_sets:
    location: ""
    description: Слабо определенные сущности
    type: markdown
    template: icon_sets.md
    source: >
      (
        $data:= $params.data; $data:= $eval($decodeUrl($data));

        $description:= "Наборы иконок";
        $icon_sets_list:= $data;
        
        { "description": $description,
          "list":$icon_sets_list
        }
      )
  
  dochub.essentials.lake.ddd_contexts:
    location: ""
    description: DDD контексты
    type: markdown
    template: ddd_contexts.md
    source: >
      (
        $data:= $params.data; $data:= $eval($decodeUrl($data));

        $description:= $data.title;
        $ddd_contexts_list:= $data.list;
        
        { "description": $description,
          "list":$ddd_contexts_list
        }
      )


  dochub.essentials.lake.map: #todo add explained sections
    location: ""
    description: DH Lake Map Grid
    type: mkr-grid
    source: >
      (

        $lake:= $dh_lake_map($);

        $packages:= $lake."$package";
        $packages_data:= $encodeUrl($string($packages));

        $imports:= $lake.imports;
        $imports_data:= $encodeUrl($string($imports));

        $rules:= $lake.rules;
        $rules_data:= $encodeUrl($string($rules));

        $docs:= $lake.docs;
        $docs_data:= $encodeUrl($string($docs));

        $functions:= $lake.functions;
        $functions_data:= $encodeUrl($string($functions));
        
        $arch_entities:= $lake.entities.list.arch_entities;
        $arch_entities_data:= $encodeUrl($string($arch_entities));

        $not_arch_entities:= $lake.entities.list.not_arch_entities;
        $not_arch_entities_data:= $encodeUrl($string($not_arch_entities));

        $undefined_entities:= [$lake.entities.list.undefined_entities];
        $undefined_entities_data:= $encodeUrl($string($undefined_entities));

        $undefined_configured_entities:= [$lake.undefined_configured_entity];
        $undefined_configured_entities_data:= $encodeUrl($string($undefined_configured_entities));

        $icon_sets:= $lake.icons and $count($lake.icons.list) >0 ? $lake.icons.list : [];
        $icon_sets_data:= $encodeUrl($string($icon_sets));

        $ddd_contexts:= $lake.ddd_contexts and $count($lake.ddd_contexts.list) >0 ? $lake.ddd_contexts : [];
        $ddd_contexts_data:= $encodeUrl($string($ddd_contexts));



        { "type": "rows",
          "items": [
            {"type": "columns",
             "items": [
              { "title": $packages.title,
                "icon": "add_box",
                  "style": {
                      "border": true,
                      "padding": "12px",
                      "max-width": "100%",
                      "margin": "4px"
                  },
                  "src": "@document/dochub.essentials.lake.packages?data=" & $packages_data
              },
              { "title": $imports.title,
                "icon": "add_box",
                  "style": {
                      "border": true,
                      "padding": "12px",
                      "max-width": "100%",
                      "margin": "4px"
                  },
                  "src": "@document/dochub.essentials.lake.imports?data=" & $imports_data
              }
              ]},

            {"type": "columns",
             "items": [
              { "title": $rules.title,
                "icon": "add_box",
                  "style": {
                      "border": true,
                      "padding": "12px",
                      "max-width": "100%",
                      "margin": "4px"
                  },
                  "src": "@document/dochub.essentials.lake.rules?data=" & $rules_data
              },
              { "title": $functions.title,
                "icon": "add_box",
                  "style": {
                      "border": true,
                      "padding": "12px",
                      "max-width": "100%",
                      "margin": "4px"
                  },
                  "src": "@document/dochub.essentials.lake.functions?data=" & $functions_data
              }
              ]},

            {"type": "columns",
             "items": [

              { "title": $docs.title,
                "icon": "add_box",
                  "style": {
                      "border": true,
                      "padding": "12px",
                      "max-width": "100%",
                      "margin": "4px"
                  },
                  "src": "@document/dochub.essentials.lake.docs?data=" & $docs_data
              },
              { "title": "Архитектектурные сущности",
                "icon": "add_box",
                  "style": {
                      "border": true,
                      "padding": "12px",
                      "max-width": "100%",
                      "margin": "4px"
                  },
                  "src": "@document/dochub.essentials.lake.arch_entities?data=" & $arch_entities_data
              }
              ]},

            {"type": "columns",
             "items": [

              { "title": "Не архитектектурные сущности",
                "icon": "add_box",
                  "style": {
                      "border": true,
                      "padding": "12px",
                      "max-width": "100%",
                      "margin": "4px"
                  },
                  "src": "@document/dochub.essentials.lake.not_arch_entities?data=" & $not_arch_entities_data
              },
              { "title": "Слабо определенные сущности",
                "icon": "add_box",
                  "style": {
                      "border": true,
                      "padding": "12px",
                      "max-width": "100%",
                      "margin": "4px"
                  },
                  "src": "@document/dochub.essentials.lake.undefined_configured_entities?data=" & $undefined_configured_entities_data
              }
            ]},

            {"type": "columns",
             "items": [

              { "title": "Не определенные сущности",
                "icon": "add_box",
                  "style": {
                      "border": true,
                      "padding": "12px",
                      "max-width": "100%",
                      "margin": "4px"
                  },
                  "src": "@document/dochub.essentials.lake.undefined_entities?data=" & $undefined_entities_data
              },
              { "title": "Иконки",
                "icon": "add_box",
                  "style": {
                      "border": true,
                      "padding": "12px",
                      "max-width": "100%",
                      "margin": "4px"
                  },
                  "src": "@document/dochub.essentials.lake.icon_sets?data=" & $icon_sets_data
              }
             ]
            },
            {"type": "columns",
             "items": [

              { "title": "DDD контексты",
                "icon": "add_box",
                  "style": {
                      "border": true,
                      "padding": "12px",
                      "max-width": "100%",
                      "margin": "4px"
                  },
                  "src": "@document/dochub.essentials.lake.ddd_contexts?data=" & $ddd_contexts_data
              }
             ]
            }
          ]
        }
      )

  dochub.essentials.domains:
    location:  Essentials/SDK/Карта доменов
    order: 120
    description: Arch Entities Objects Domain Map (graph wrapper)
    type: markdown
    template: domains.md
    source: >
      (
        $arch_entities_id:= [$dh_lake_map($).entities.list.arch_entities.entity];
        $arch_objects:= $dh_ctx_objects($arch_entities_id, $);

        $data:= $encodeUrl($string($arch_objects));

        {"is_not_empty": ($count($arch_objects.$keys()) > 0
                            ? true
                            : false),
          "data": $data
        }        
      )

  dochub.essentials.domains.graph:
    location: ""
    order: 120
    description: Arch Entities Objects Domain Map (graph)
    type: smartants
    source: >
      (
        $data:= $eval($decodeUrl($params.data));
        $data:= $map($spread($data), function($v){
                    $map($spread($v.*), function($vv){
                      { "object_id": $vv.$keys(),
                        "object_title": $vv.*.title,
                        "entity_id": $v.$keys(),
                        "entity_title": $lookup($.entities, $v.$keys()).title
                      }
                    })
                });
        $data:= $reduce($data, $append);

        $icons:= $getIcons($dh_lake_map($).icons.list, $);

        $pre_nodes:= $data.$map($, function($v) {(
            $title:= $split($.object_id, ".")[-1];
            $size:= $length($title);
            $symbol_width:= 25 + ($size > 7 ? $size*14 : $size*16 );
            $symbol:= $getSymbol_t1($title, $.entity_id, $symbol_width, $icons);
            {"nodes": {
                $.object_id: {
                    "title": $title, 
                    "symbol": $symbol.title}
                },
            "symbols": {
                $symbol.title: $symbol.svg}
            };
        )});

        {"config": {
          "distance": 10,
          "trackWidth": 24,
          "hideLeafTitles": true
          },
          "symbols": $merge($pre_nodes.symbols), 
          "nodes": $merge($pre_nodes.nodes)
        } 


      )

  dochub.essentials.sdk:
    location: Essentials/SDK
    description: # todo описание документа
    type: markdown
    source: sdk.md

  dochub.essentials.docs.roadmap:
    location: Essentials/Roadmap
    description: DocHub Essentials Roadmap
    type: markdown
    source: roadmap.md

  dochub.essentials.docs.jsonata.context:
    location: Essentials/JSONata/context
    order: 600
    description: JSONata context
    type: markdown
    source: jsonata/context.md

# Manifest meta

dochub.essentials.config:
  - key: imports
    list:
      - manifest: docs/docs.yaml
        title: DocHub Essentials Documentation
      - manifest: config.yaml
        title: Основная конфигурация озера